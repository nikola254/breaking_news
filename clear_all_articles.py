#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
–û—á–∏—â–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫–∏.
"""

import clickhouse_connect
from config import Config
import sys

def get_clickhouse_client():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ ClickHouse."""
    if Config.CLICKHOUSE_PASSWORD:
        return clickhouse_connect.get_client(
            host=Config.CLICKHOUSE_HOST,
            port=Config.CLICKHOUSE_PORT,
            username=Config.CLICKHOUSE_USER,
            password=Config.CLICKHOUSE_PASSWORD
        )
    else:
        return clickhouse_connect.get_client(
            host=Config.CLICKHOUSE_HOST,
            port=Config.CLICKHOUSE_PORT,
            username=Config.CLICKHOUSE_USER
        )

def clear_all_articles():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å—Ç–∞—Ç—å–∏ –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –Ω–æ–≤–æ—Å—Ç–µ–π."""
    client = get_clickhouse_client()
    
    try:
        print("üóëÔ∏è  –ù–∞—á–∏–Ω–∞—é —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π...")
        
        # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Å—Ö–µ–º–µ news
        news_tables = [
            'ria_headlines', 'lenta_headlines', 'rbc_headlines', 'gazeta_headlines', 
            'kommersant_headlines', 'tsn_headlines', 'unian_headlines', 'rt_headlines',
            'cnn_headlines', 'bbc_headlines', 'reuters_headlines', 'aljazeera_headlines',
            'dw_headlines', 'euronews_headlines', 'france24_headlines', 'israil_headlines',
            'telegram_ukraine', 'universal_europe', 'universal_usa', 'universal_other'
        ]
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        categories = [
            'military_operations', 'humanitarian_crisis', 'economic_consequences',
            'political_decisions', 'information_social'
        ]
        
        # –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        sources_with_categories = [
            'ria', 'lenta', 'rbc', 'gazeta', 'kommersant', 
            'tsn', 'unian', 'rt', 'cnn', 'bbc', 'reuters', 
            'aljazeera', 'dw', 'euronews', 'france24', 'israil'
        ]
        
        total_deleted = 0
        
        # 1. –û—á–∏—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–æ–≤–æ—Å—Ç–µ–π
        print("\nüì∞ –û—á–∏—â–∞—é –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–æ–≤–æ—Å—Ç–µ–π...")
        for table in news_tables:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
                count_result = client.query(f"SELECT COUNT(*) FROM news.{table}")
                count = count_result.result_rows[0][0] if count_result.result_rows else 0
                
                if count > 0:
                    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
                    client.command(f"TRUNCATE TABLE news.{table}")
                    print(f"  ‚úÖ {table}: —É–¥–∞–ª–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π")
                    total_deleted += count
                else:
                    print(f"  ‚ö™ {table}: —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ –ø—É—Å—Ç–∞")
                    
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ {table}: {e}")
        
        # 2. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        print("\nüè∑Ô∏è  –û—á–∏—â–∞—é —Ç–∞–±–ª–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
        for source in sources_with_categories:
            for category in categories:
                table_name = f"{source}_{category}"
                try:
                    count_result = client.query(f"SELECT COUNT(*) FROM news.{table_name}")
                    count = count_result.result_rows[0][0] if count_result.result_rows else 0
                    
                    if count > 0:
                        client.command(f"TRUNCATE TABLE news.{table_name}")
                        print(f"  ‚úÖ {table_name}: —É–¥–∞–ª–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π")
                        total_deleted += count
                    else:
                        print(f"  ‚ö™ {table_name}: —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ –ø—É—Å—Ç–∞")
                        
                except Exception as e:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ {table_name}: {e}")
        
        # 3. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
        print("\nüá∫üá¶ –û—á–∏—â–∞—é —Ç–∞–±–ª–∏—Ü—ã —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞...")
        ukraine_tables = ['all_news'] + categories
        
        for table in ukraine_tables:
            try:
                count_result = client.query(f"SELECT COUNT(*) FROM ukraine_conflict.{table}")
                count = count_result.result_rows[0][0] if count_result.result_rows else 0
                
                if count > 0:
                    client.command(f"TRUNCATE TABLE ukraine_conflict.{table}")
                    print(f"  ‚úÖ ukraine_conflict.{table}: —É–¥–∞–ª–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π")
                    total_deleted += count
                else:
                    print(f"  ‚ö™ ukraine_conflict.{table}: —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ –ø—É—Å—Ç–∞")
                    
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ ukraine_conflict.{table}: {e}")
        
        # 4. –û—á–∏—â–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        print("\nüìä –û—á–∏—â–∞—é –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã...")
        analytics_tables = ['daily_analytics', 'social_tension_metrics']
        
        for table in analytics_tables:
            try:
                count_result = client.query(f"SELECT COUNT(*) FROM ukraine_conflict.{table}")
                count = count_result.result_rows[0][0] if count_result.result_rows else 0
                
                if count > 0:
                    client.command(f"TRUNCATE TABLE ukraine_conflict.{table}")
                    print(f"  ‚úÖ ukraine_conflict.{table}: —É–¥–∞–ª–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π")
                    total_deleted += count
                else:
                    print(f"  ‚ö™ ukraine_conflict.{table}: —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ –ø—É—Å—Ç–∞")
                    
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ ukraine_conflict.{table}: {e}")
        
        # 5. –û—á–∏—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        print("\nüë§ –ò—â—É –∏ –æ—á–∏—â–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã...")
        try:
            custom_tables_result = client.query("""
                SELECT name FROM system.tables 
                WHERE database = 'news' 
                AND name LIKE 'custom_%_headlines'
                ORDER BY name
            """)
            
            for row in custom_tables_result.result_rows:
                table_name = row[0]
                try:
                    count_result = client.query(f"SELECT COUNT(*) FROM news.{table_name}")
                    count = count_result.result_rows[0][0] if count_result.result_rows else 0
                    
                    if count > 0:
                        client.command(f"TRUNCATE TABLE news.{table_name}")
                        print(f"  ‚úÖ {table_name}: —É–¥–∞–ª–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π")
                        total_deleted += count
                    else:
                        print(f"  ‚ö™ {table_name}: —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ –ø—É—Å—Ç–∞")
                        
                except Exception as e:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ {table_name}: {e}")
                    
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ç–∞–±–ª–∏—Ü: {e}")
        
        print(f"\nüéâ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"üìä –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {total_deleted}")
        print(f"üîÑ –°—á–µ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç–µ–π –æ–±–Ω—É–ª–µ–Ω—ã")
        
        return total_deleted
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 0
        
    finally:
        client.close()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üö® –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç –í–°–ï —Å—Ç–∞—Ç—å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!")
    print("–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!")
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    confirmation = input("\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–≤–≤–µ–¥–∏—Ç–µ '–î–ê' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è): ")
    
    if confirmation.upper() != '–î–ê':
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    final_confirmation = input("\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í–≤–µ–¥–∏—Ç–µ '–£–î–ê–õ–ò–¢–¨ –í–°–ï' –¥–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
    
    if final_confirmation.upper() != '–£–î–ê–õ–ò–¢–¨ –í–°–ï':
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
    deleted_count = clear_all_articles()
    
    if deleted_count > 0:
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} –∑–∞–ø–∏—Å–µ–π")
    else:
        print("\n‚ö™ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

if __name__ == "__main__":
    main()