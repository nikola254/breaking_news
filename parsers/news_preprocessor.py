"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
–£–¥–∞–ª—è–µ—Ç —Å—Å—ã–ª–∫–∏, —ç–º–æ–¥–∑–∏, —Å–º–∞–π–ª–∏–∫–∏ –∏ –¥—Ä—É–≥–æ–π –º—É—Å–æ—Ä
"""
import re
import emoji

class NewsPreprocessor:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
    
    def __init__(self):
        # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        self.url_pattern = re.compile(r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+')
        self.email_pattern = re.compile(r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b')
        self.telegram_link_pattern = re.compile(r't\.me/[a-zA-Z0-9_]+')
        self.html_tags_pattern = re.compile(r'<[^>]+>')
        self.mention_pattern = re.compile(r'@[a-zA-Z0-9_]+')
        self.hashtag_pattern = re.compile(r'#[–∞-—è–ê-–Ø—ë–Åa-zA-Z0-9_]+')
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤
        self.image_pattern = re.compile(r'\[—Ñ–æ—Ç–æ\]|\[–∫–∞—Ä—Ç–∏–Ω–∫–∞\]|\[–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\]|\[photo\]|\[image\]|\[img\]', re.IGNORECASE)
        self.video_pattern = re.compile(r'\[–≤–∏–¥–µ–æ\]|\[video\]|\[—Ä–æ–ª–∏–∫\]', re.IGNORECASE)
        self.audio_pattern = re.compile(r'\[–∞—É–¥–∏–æ\]|\[audio\]|\[–≥–æ–ª–æ—Å–æ–≤–æ–µ\]', re.IGNORECASE)
        
        # –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã
        self.whitespace_pattern = re.compile(r'\s+')
        
    def remove_urls(self, text):
        """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ URL –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
        text = self.url_pattern.sub('', text)
        text = self.telegram_link_pattern.sub('', text)
        return text
    
    def remove_emails(self, text):
        """–£–¥–∞–ª—è–µ—Ç email –∞–¥—Ä–µ—Å–∞"""
        return self.email_pattern.sub('', text)
    
    def remove_html_tags(self, text):
        """–£–¥–∞–ª—è–µ—Ç HTML —Ç–µ–≥–∏"""
        return self.html_tags_pattern.sub('', text)
    
    def remove_mentions(self, text):
        """–£–¥–∞–ª—è–µ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏—è (@username)"""
        return self.mention_pattern.sub('', text)
    
    def remove_hashtags(self, text):
        """–£–¥–∞–ª—è–µ—Ç —Ö—ç—à—Ç–µ–≥–∏"""
        return self.hashtag_pattern.sub('', text)
    
    def remove_emojis(self, text):
        """–£–¥–∞–ª—è–µ—Ç —ç–º–æ–¥–∑–∏ –∏ —Å–º–∞–π–ª–∏–∫–∏"""
        # –£–¥–∞–ª—è–µ–º Unicode —ç–º–æ–¥–∑–∏
        text = emoji.replace_emoji(text, replace='')
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–º–∞–π–ª–∏–∫–∏
        emoticons_pattern = re.compile(r'[:;=]-?[)D(]|\^_\^|>_<|T_T|\(‚ïØ¬∞‚ñ°¬∞\)‚ïØÔ∏µ ‚îª‚îÅ‚îª')
        text = emoticons_pattern.sub('', text)
        
        return text
    
    def remove_media_references(self, text):
        """–£–¥–∞–ª—è–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–µ–¥–∏–∞-—Ñ–∞–π–ª—ã"""
        text = self.image_pattern.sub('', text)
        text = self.video_pattern.sub('', text)
        text = self.audio_pattern.sub('', text)
        return text
    
    def fix_missing_spaces(self, text):
        """
        –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–±–µ–ª—ã –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏
        –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º: "–ø–∞–ª–µ—Å—Ç–∏–Ω—Å–∫–æ–µ–¥–≤–∏–∂–µ–Ω–∏–µ", "–æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è–ü–∞–ª–µ—Å—Ç–∏–Ω—ã"
        """
        if not text:
            return ""
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω: —Å—Ç—Ä–æ—á–Ω–∞—è –±—É–∫–≤–∞ + –∑–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞ (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)
        text = re.sub(r'([–∞-—è])([–ê-–Ø])', r'\1 \2', text)
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω: —Å—Ç—Ä–æ—á–Ω–∞—è –±—É–∫–≤–∞ + –∑–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞ (–ª–∞—Ç–∏–Ω–∏—Ü–∞)
        text = re.sub(r'([a-z])([A-Z])', r'\1 \2', text)
        
        return text
    
    def normalize_whitespace(self, text):
        """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫"""
        # –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –æ–¥–∏–Ω
        text = self.whitespace_pattern.sub(' ', text)
        # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
        text = text.strip()
        return text
    
    def clean_text(self, text, 
                   remove_urls=True,
                   remove_emails=True,
                   remove_html=True,
                   remove_mentions=False,  # –û—Å—Ç–∞–≤–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                   remove_hashtags=False,  # –û—Å—Ç–∞–≤–ª—è–µ–º —Ö—ç—à—Ç–µ–≥–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                   remove_emojis=True,
                   remove_media=True,
                   fix_spaces=True):
        """
        –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
        
        Args:
            text: –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
            remove_urls: –£–¥–∞–ª—è—Ç—å –ª–∏ URL
            remove_emails: –£–¥–∞–ª—è—Ç—å –ª–∏ email
            remove_html: –£–¥–∞–ª—è—Ç—å –ª–∏ HTML —Ç–µ–≥–∏
            remove_mentions: –£–¥–∞–ª—è—Ç—å –ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
            remove_hashtags: –£–¥–∞–ª—è—Ç—å –ª–∏ —Ö—ç—à—Ç–µ–≥–∏
            remove_emojis: –£–¥–∞–ª—è—Ç—å –ª–∏ —ç–º–æ–¥–∑–∏
            remove_media: –£–¥–∞–ª—è—Ç—å –ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–µ–¥–∏–∞
            fix_spaces: –ò—Å–ø—Ä–∞–≤–ª—è—Ç—å –ª–∏ —Å–∫–ª–µ–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
            
        Returns:
            –û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        """
        if not text:
            return ""
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã
        if remove_html:
            text = self.remove_html_tags(text)
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∫–ª–µ–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è HTML —Ç–µ–≥–æ–≤
        if fix_spaces:
            text = self.fix_missing_spaces(text)
        
        if remove_urls:
            text = self.remove_urls(text)
        
        if remove_emails:
            text = self.remove_emails(text)
        
        if remove_mentions:
            text = self.remove_mentions(text)
        
        if remove_hashtags:
            text = self.remove_hashtags(text)
        
        if remove_emojis:
            text = self.remove_emojis(text)
        
        if remove_media:
            text = self.remove_media_references(text)
        
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –∫–æ–Ω—Ü–µ
        text = self.normalize_whitespace(text)
        
        return text
    
    def preprocess_article(self, title, content):
        """
        –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—å–∏ (–∑–∞–≥–æ–ª–æ–≤–æ–∫ + –∫–æ–Ω—Ç–µ–Ω—Ç)
        
        Args:
            title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏
            content: –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
            
        Returns:
            tuple: (cleaned_title, cleaned_content)
        """
        cleaned_title = self.clean_text(title, 
                                         remove_mentions=False,
                                         remove_hashtags=False,
                                         fix_spaces=True)
        
        cleaned_content = self.clean_text(content,
                                          remove_mentions=False,
                                          remove_hashtags=False,
                                          fix_spaces=True)
        
        return cleaned_title, cleaned_content


# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø–∞—Ä—Å–µ—Ä–∞—Ö
preprocessor = NewsPreprocessor()


if __name__ == '__main__':
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_text = """
    –ü—Ä–∏–≤–µ—Ç! üòÄ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —ç—Ç–æ –≤–∏–¥–µ–æ https://example.com/video.mp4
    –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ @username –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ #—Ö—ç—à—Ç–µ–≥
    [—Ñ–æ—Ç–æ] [–≤–∏–¥–µ–æ]
    Email: test@example.com
    <b>HTML —Ç–µ–≥–∏</b>
    üéâüéä –ú–Ω–æ–∂–µ—Å—Ç–≤–æ   –ø—Ä–æ–±–µ–ª–æ–≤    –∑–¥–µ—Å—å
    –ø–∞–ª–µ—Å—Ç–∏–Ω—Å–∫–æ–µ–¥–≤–∏–∂–µ–Ω–∏–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è–ü–∞–ª–µ—Å—Ç–∏–Ω—ã
    """
    
    preprocessor = NewsPreprocessor()
    cleaned = preprocessor.clean_text(test_text)
    print("–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:")
    print(test_text)
    print("\n–û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
    print(cleaned)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–µ–ª–æ–≤
    test_spaces = "–ø–∞–ª–µ—Å—Ç–∏–Ω—Å–∫–æ–µ–¥–≤–∏–∂–µ–Ω–∏–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è–ü–∞–ª–µ—Å—Ç–∏–Ω—ã"
    fixed = preprocessor.fix_missing_spaces(test_spaces)
    print(f"\n–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–µ–ª–æ–≤:")
    print(f"–î–æ: {test_spaces}")
    print(f"–ü–æ—Å–ª–µ: {fixed}")


