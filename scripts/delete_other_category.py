"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π 'other' –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü ClickHouse.
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from clickhouse_driver import Client
from config import Config

def delete_other_category_articles():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å—Ç–∞—Ç—å–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π 'other' –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü."""
    
    print("="*60)
    print("–£–î–ê–õ–ï–ù–ò–ï –°–¢–ê–¢–ï–ô –° –ö–ê–¢–ï–ì–û–†–ò–ï–ô 'OTHER'")
    print("="*60)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ ClickHouse
    client = Client(
        host=Config.CLICKHOUSE_HOST,
        port=Config.CLICKHOUSE_NATIVE_PORT,
        user=Config.CLICKHOUSE_USER,
        password=Config.CLICKHOUSE_PASSWORD
    )
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ news
    tables_query = """
        SELECT name 
        FROM system.tables 
        WHERE database = 'news' 
        AND name LIKE '%_headlines'
        OR name LIKE '%_military_operations'
        OR name LIKE '%_humanitarian_crisis'
        OR name LIKE '%_economic_consequences'
        OR name LIKE '%_political_decisions'
        OR name LIKE '%_information_social'
        OR name LIKE '%_other'
        ORDER BY name
    """
    
    result = client.execute(tables_query)
    tables = [row[0] for row in result]
    
    print(f"\n–ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {len(tables)}\n")
    
    total_deleted = 0
    
    for table_name in tables:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –∫–æ–ª–æ–Ω–∫–∞ category
            columns_query = f"DESCRIBE TABLE news.{table_name}"
            columns_result = client.execute(columns_query)
            columns = [row[0] for row in columns_result]
            
            if 'category' not in columns:
                print(f"‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ {table_name}: –Ω–µ—Ç –∫–æ–ª–æ–Ω–∫–∏ 'category', –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                continue
            
            # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π —Å category = 'other'
            count_query = f"SELECT COUNT(*) FROM news.{table_name} WHERE category = 'other'"
            count_result = client.execute(count_query)
            count = count_result[0][0]
            
            if count == 0:
                print(f"‚úì  –¢–∞–±–ª–∏—Ü–∞ {table_name}: –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π —Å category='other'")
                continue
            
            # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ —Å category = 'other'
            delete_query = f"ALTER TABLE news.{table_name} DELETE WHERE category = 'other'"
            client.execute(delete_query)
            
            print(f"üóëÔ∏è  –¢–∞–±–ª–∏—Ü–∞ {table_name}: —É–¥–∞–ª–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π")
            total_deleted += count
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–∞–±–ª–∏—Ü—ã {table_name}: {e}")
    
    print("\n" + "="*60)
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìä –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {total_deleted}")
    print("="*60)
    
    # –¢–∞–∫–∂–µ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ telegram_headlines
    print("\n" + "="*60)
    print("–£–î–ê–õ–ï–ù–ò–ï –°–¢–ê–†–´–• –ö–ê–¢–ï–ì–û–†–ò–ô –ò–ó TELEGRAM_HEADLINES")
    print("="*60)
    
    try:
        # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ —Å category = 'military' (—Å—Ç–∞—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è)
        old_military_query = "SELECT COUNT(*) FROM news.telegram_headlines WHERE category = 'military'"
        old_military_count = client.execute(old_military_query)[0][0]
        
        if old_military_count > 0:
            print(f"\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {old_military_count} –∑–∞–ø–∏—Å–µ–π —Å–æ —Å—Ç–∞—Ä–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π 'military'")
            print("   –≠—Ç–∏ –∑–∞–ø–∏—Å–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –ø–∞—Ä—Å–∏–Ω–≥–µ")
            
            delete_old_military = "ALTER TABLE news.telegram_headlines DELETE WHERE category = 'military'"
            client.execute(delete_old_military)
            print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ {old_military_count} –∑–∞–ø–∏—Å–µ–π —Å category='military'")
        
        # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ —Å category = 'international' (—Å—Ç–∞—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è)
        old_international_query = "SELECT COUNT(*) FROM news.telegram_headlines WHERE category = 'international'"
        old_international_count = client.execute(old_international_query)[0][0]
        
        if old_international_count > 0:
            print(f"\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {old_international_count} –∑–∞–ø–∏—Å–µ–π —Å–æ —Å—Ç–∞—Ä–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π 'international'")
            print("   –≠—Ç–∏ –∑–∞–ø–∏—Å–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –ø–∞—Ä—Å–∏–Ω–≥–µ")
            
            delete_old_international = "ALTER TABLE news.telegram_headlines DELETE WHERE category = 'international'"
            client.execute(delete_old_international)
            print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ {old_international_count} –∑–∞–ø–∏—Å–µ–π —Å category='international'")
        
        # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ —Å category = 'other'
        other_query = "SELECT COUNT(*) FROM news.telegram_headlines WHERE category = 'other'"
        other_count = client.execute(other_query)[0][0]
        
        if other_count > 0:
            print(f"\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {other_count} –∑–∞–ø–∏—Å–µ–π —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π 'other'")
            
            delete_other = "ALTER TABLE news.telegram_headlines DELETE WHERE category = 'other'"
            client.execute(delete_other)
            print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ {other_count} –∑–∞–ø–∏—Å–µ–π —Å category='other'")
        
        print("\n‚úÖ –û—á–∏—Å—Ç–∫–∞ telegram_headlines –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ telegram_headlines: {e}")
    
    print("="*60)

if __name__ == '__main__':
    delete_other_category_articles()
