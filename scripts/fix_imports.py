#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ –≤–æ –≤—Å–µ—Ö –ø–∞—Ä—Å–µ—Ä–∞—Ö
"""

import os
import re
import glob

def fix_imports_in_file(file_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ"""
    print(f"üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã: {file_path}")
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤
        replacements = [
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π –∏–∑ parsers
            (r'from news_categories import', 'from parsers.news_categories import'),
            (r'from ukraine_relevance_filter import', 'from parsers.ukraine_relevance_filter import'),
            (r'from duplicate_checker import', 'from parsers.duplicate_checker import'),
            (r'from content_validator import', 'from parsers.content_validator import'),
            (r'from news_preprocessor import', 'from parsers.news_preprocessor import'),
            (r'from tension_calculator import', 'from parsers.tension_calculator import'),
        ]
        
        for pattern, replacement in replacements:
            content = re.sub(pattern, replacement, content)
        
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –∏–∑–º–µ–Ω–∏–ª—Å—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        if content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: {file_path}")
            return True
        else:
            print(f"‚ÑπÔ∏è –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {file_path}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ {file_path}: {e}")
        return False

def fix_all_imports():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤–æ –≤—Å–µ—Ö –ø–∞—Ä—Å–µ—Ä–∞—Ö"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ú–ü–û–†–¢–û–í –í–û –í–°–ï–• –ü–ê–†–°–ï–†–ê–•")
    print("=" * 50)
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–∞–π–ª—ã –ø–∞—Ä—Å–µ—Ä–æ–≤
    parser_files = glob.glob("parsers/parser_*.py")
    
    fixed_count = 0
    total_count = len(parser_files)
    
    for file_path in parser_files:
        if fix_imports_in_file(file_path):
            fixed_count += 1
    
    print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {total_count}")
    print(f"   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {fixed_count}")
    print(f"   –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {total_count - fixed_count}")

if __name__ == "__main__":
    fix_all_imports()
