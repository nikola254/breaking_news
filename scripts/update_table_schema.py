#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã —Ç–∞–±–ª–∏—Ü –≤ ClickHouse
–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è Gen-API –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import requests
from config import Config

def update_table_schema():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π"""
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã —Ç–∞–±–ª–∏—Ü ClickHouse...")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ClickHouse —á–µ—Ä–µ–∑ HTTP
        base_url = f"http://{Config.CLICKHOUSE_HOST}:{Config.CLICKHOUSE_PORT}"
        auth = (Config.CLICKHOUSE_USER, Config.CLICKHOUSE_PASSWORD) if Config.CLICKHOUSE_USER else None
        
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ClickHouse: {Config.CLICKHOUSE_HOST}:{Config.CLICKHOUSE_PORT}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        tables_query = f"SELECT name FROM system.tables WHERE database = '{Config.CLICKHOUSE_DATABASE}'"
        
        response = requests.get(
            f"{base_url}/",
            params={'query': tables_query},
            auth=auth,
            timeout=30
        )
        
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code} - {response.text}")
            return False
        
        tables_text = response.text.strip()
        if not tables_text:
            print("‚ÑπÔ∏è –ù–µ—Ç —Ç–∞–±–ª–∏—Ü –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
            return True
        
        tables = [line.strip() for line in tables_text.split('\n') if line.strip()]
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        
        # –ü–æ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        new_fields = [
            "social_tension_index Float32 DEFAULT 0",
            "spike_index Float32 DEFAULT 0", 
            "ai_category String DEFAULT 'unknown'",
            "ai_confidence Float32 DEFAULT 0",
            "ai_classification_metadata String DEFAULT ''"
        ]
        
        updated_tables = []
        
        for table_name in tables:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–∏ –ø–æ–ª—è
                check_query = f"DESCRIBE TABLE {Config.CLICKHOUSE_DATABASE}.{table_name}"
                
                response = requests.get(
                    f"{base_url}/",
                    params={'query': check_query},
                    auth=auth,
                    timeout=30
                )
                
                if response.status_code != 200:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã {table_name}")
                    continue
                
                existing_fields = response.text.lower()
                
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç
                fields_to_add = []
                for field in new_fields:
                    field_name = field.split()[0]
                    if field_name not in existing_fields:
                        fields_to_add.append(field)
                
                if fields_to_add:
                    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è
                    for field in fields_to_add:
                        alter_query = f"ALTER TABLE {Config.CLICKHOUSE_DATABASE}.{table_name} ADD COLUMN {field}"
                        
                        response = requests.post(
                            f"{base_url}/",
                            data=alter_query,
                            auth=auth,
                            timeout=30
                        )
                        
                        if response.status_code == 200:
                            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ –≤ {table_name}: {field.split()[0]}")
                        else:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è –≤ {table_name}: {response.status_code}")
                    
                    updated_tables.append(table_name)
                else:
                    print(f"‚ÑπÔ∏è –¢–∞–±–ª–∏—Ü–∞ {table_name} —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã {table_name}: {e}")
        
        print(f"\nüéØ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(updated_tables)}")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {', '.join(updated_tables[:10])}{'...' if len(updated_tables) > 10 else ''}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ö–µ–º—ã: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–•–ï–ú–´ –¢–ê–ë–õ–ò–¶ CLICKHOUSE")
    print("=" * 60)
    
    success = update_table_schema()
    
    if success:
        print("\nüéâ –°—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä—Å–µ—Ä—ã —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ö–µ–º—ã —Ç–∞–±–ª–∏—Ü")
