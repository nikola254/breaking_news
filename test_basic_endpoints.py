#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import time

def test_endpoint(url, description):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É—é: {description}")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def main():
    base_url = "http://127.0.0.1:5000"
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤")
    print("=" * 50)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    pages = [
        ("/", "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("/analytics", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"),
        ("/clickhouse", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"),
        ("/predict", "–ü—Ä–æ–≥–Ω–æ–∑—ã"),
        ("/about", "–û –ø—Ä–æ–µ–∫—Ç–µ"),
    ]
    
    # API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    api_endpoints = [
        ("/api/news", "API –Ω–æ–≤–æ—Å—Ç–µ–π"),
        ("/api/news/statistics", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π"),
    ]
    
    successful_tests = 0
    total_tests = len(pages) + len(api_endpoints)
    
    print("\nüìÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü:")
    for endpoint, description in pages:
        url = base_url + endpoint
        if test_endpoint(url, description):
            successful_tests += 1
        time.sleep(0.3)
    
    print("\nüîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API:")
    for endpoint, description in api_endpoints:
        url = base_url + endpoint
        if test_endpoint(url, description):
            successful_tests += 1
        time.sleep(0.3)
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {successful_tests}/{total_tests} —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤")
    
    if successful_tests == total_tests:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    elif successful_tests > 0:
        print("‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("üö® –ù–∏—á–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

if __name__ == "__main__":
    main()